
@{
    ViewData["Title"] = "View";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movie Seat Booking</title>
</head>
<body>
    <div class="movie-booking">
        <!-- Progress Bar - Updated structure -->
        <div class="progress-container">
            <div class="progress-bar">
                <div class="progress-line"></div>
                <div class="step completed">Chọn phim/Rạp/Suất</div>
                <div class="step active">Chọn ghế</div>
                <div class="step">Thanh toán</div>
                <div class="step">Xác nhận</div>
            </div>
        </div>
        <div class="main-content">
            <!-- Left Section -->
            <div class="left-section">
                <!-- Showtime Selection -->
                <div class="showtime-selection">
                    <h3>Đổi suất chiếu</h3>
                    <div class="showtime-buttons">
                        <button class="time-btn active" data-time="17:00">17:00</button>
                        <button class="time-btn" data-time="22:00">22:00</button>
                    </div>
                </div>
                <!-- Seat Grid -->
                <div class="seat-grid-container">
                    <div class="seat-grid-header" id="seat-grid-header">
                        <!-- Column numbers will be generated by JavaScript -->
                    </div>
                    <div class="seat-grid" id="seat-grid">
                        <!-- Seats will be generated by JavaScript -->
                    </div>
                </div>
                <!-- Screen -->
                <div class="screen">
                    <div class="screen-label">MÀN HÌNH</div>
                </div>
                <!-- Legend -->
                <div class="seat-legend">
                    <div class="legend-item">
                        <div class="legend-box normal"></div>
                        <span>Ghế thường</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-box vip"></div>
                        <span>Ghế VIP</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-box couple"></div>
                        <span>Ghế couple</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-box sold"></div>
                        <span>Ghế đã bán</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-box selected"></div>
                        <span>Ghế đang chọn</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-box unavailable"></div>
                        <span>Ghế không khả dụng</span>
                    </div>
                </div>
            </div>
            <!-- Right Section -->
            <div class="right-section">
                <div class="movie-details">
                    <div class="movie-poster">
                        <img src="https://placehold.co/140x200/red/white?text=Movie" alt="Movie Poster" />
                    </div>
                    <div class="movie-info">
                        <h2>Bộ Tứ Báo Thù</h2>
                        <div class="movie-tag">2D Phụ Đề</div>
                        <div class="theater-info">Chicken Đà Nẵng - Rạp 4</div>
                        <div class="showtime-info">
                            Suất chiếu: <strong id="current-time">17:00</strong>, Hôm nay
                        </div>
                    </div>
                </div>
                <div class="booking-details">
                    <div class="selected-seats" id="selected-seats-container">
                        <!-- Selected seats will be displayed by JavaScript -->
                    </div>
                    <div class="total-section">
                        <div class="total-label">Tổng cộng:</div>
                        <div class="total-price" id="total-price">0vnđ</div>
                    </div>
                    <div class="action-buttons">
                        <button class="back-btn">Quay lại</button>
                        <button class="payment-btn">Thanh toán</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Payment Success Modal -->
        <div id="payment-success-modal" class="modal">
            <div class="modal-content">
                <div class="success-icon">✓</div>
                <h2 class="modal-title">Thanh toán thành công!</h2>
                <p class="modal-message">
                    Cảm ơn bạn đã đặt vé xem phim. Vé của bạn đã được xác nhận.<br>
                    Mã đặt vé: <strong id="booking-code">ABC12345</strong><br>
                    Vui lòng kiểm tra email để nhận thông tin chi tiết.
                </p>
                <div class="modal-buttons">
                    <button class="modal-button secondary" id="view-tickets-btn">Xem vé của tôi</button>
                    <button class="modal-button primary" id="home-btn">Về trang chủ</button>
                </div>
            </div>
        </div>

        <div id="payment-confirm" class="popup-information-book-ticket">
            <div class="information-book-ticket">
                <h1 class="title-indformation-book-ticket-popup">THÔNG TIN ĐẶT VÉ</h1>
                <div class="h-50">
                    <div class="detail-book-ticket-popup">
                        <div class="text-detail-book-ticket-popup">Phim</div>
                        <div class="infor-detail-book-ticket-popup">
                            <h3 class="header-infor-detail-book-ticket-popup">Bộ tứ báo thủ</h3>
                            <p class="description-infor-detail-book-ticket-popup">2d phụ đề</p>
                        </div>
                    </div>
                    <div class="detail-book-ticket-popup">
                        <div class="text-detail-book-ticket-popup">Rạp</div>
                        <div class="infor-detail-book-ticket-popup">
                            <h3 class="header-infor-detail-book-ticket-popup">Chicken Đà Nẵng</h3>
                            <p class="description-infor-detail-book-ticket-popup">Suất: 17h30</p>
                        </div>
                    </div>
                    <div class="detail-book-ticket-popup">
                        <div class="text-detail-book-ticket-popup">Chi tiet</div>
                        <div class="infor-detail-book-ticket-popup">
                            <p id="description-infor-detail-book-ticket-popup" class="description-infor-detail-book-ticket-popup">Rạp 4, ghế G4, G5</p>
                        </div>
                    </div>
                </div>
                <div class="total-confirm-pay-ticket">
                    <div class="total-ticket">
                        <div class="text-detail-book-ticket-popup">Tổng</div>
                        <div id="price-detail-book-ticket" class="price-detail-book-ticket">220.000VND</div>
                    </div>
                    <hr />
                    <form asp-controller="Auditorium" method="post" asp-action="OnPay">
                        <button id="payment-btn-confirm" class="payment-btn-confirm">Thanh toán</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
          // Constants
          const rows = 'ABCDEFGHIJKLMN';
          const cols = 16;
          const prices = {
            normal: 80000,
            vip: 120000,
            couple: 150000
          };
          // State variables
          let selectedSeats = [];
          let selectedTime = '17:00';
          let currentStep = 2; // Currently on seat selection step
          // Predefined unavailable and sold seats
          const unavailableSeats = ['A1', 'B2', 'C3', 'D4'];
          const soldSeats = ['J11'];
          // Helper functions
          function getSeatPrice(row) {
            if ('ABCD'.includes(row)) return prices.normal;
            if ('EFGHI'.includes(row)) return prices.vip;
            return prices.couple;
          }
          function getSeatType(row) {
            if ('ABCD'.includes(row)) return 'normal';
            if ('EFGHI'.includes(row)) return 'vip';
            return 'couple';
          }
          function getSeatClass(rowChar, col) {
            const seatId = `${rowChar}${col}`;
            if (unavailableSeats.includes(seatId)) return 'seat unavailable';
            if (soldSeats.includes(seatId)) return 'seat sold';
            if (selectedSeats.includes(seatId)) return 'seat selected';
            if ('ABCD'.includes(rowChar)) return 'seat normal';
            if ('EFGHI'.includes(rowChar)) return 'seat vip';
            return 'seat couple';
          }
          /**/function calculateTotal() {
            return selectedSeats.reduce((total, seatId) => {
              const row = seatId.charAt(0);
              return total + getSeatPrice(row);
            }, 0);
          }
          function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          }
          function handleSeatClick(seatId) {
            if (unavailableSeats.includes(seatId) || soldSeats.includes(seatId)) {
              return;
            }
            if ( !selectedSeats.includes(seatId) ) {
                selectedSeats.push(seatId);
            } else {
				selectedSeats = selectedSeats.filter(seat => seat !== seatId);
            }
            // Only allow selecting one seat at a time
            // Update UI
            updateSeatGrid();
            updateSelectedSeatsDisplay();
            updateTotalPrice();
          }
          // Payment processing
          function processPayment() {
            // Simulate payment processing
            return new Promise((resolve) => {
              setTimeout(() => {
                // Generate random booking code
                const bookingCode = 'BK' + Math.floor(Math.random() * 1000000).toString().padStart(6, '0');
                document.getElementById('booking-code').textContent = bookingCode;
                resolve(true);
              }, 1500);
            });
          }
          function showPaymentSuccess() {
            const modal = document.getElementById('payment-success-modal');
            modal.style.display = 'flex';
          }
          function showPaymentConfirm() {
              const popup = document.getElementById('payment-confirm');
              let result = '';
			  if (selectedSeats.length === 0) {
				  result = 'Vui lòng chọn ghế trước khi thanh toán.';
			  } else {
                  result = 'Rạp 4 \n Ghế:';
				  for ( let i = 0; i < selectedSeats.length; i++) {
					  result += selectedSeats[i] + ', ';
                  }
			  }
			  document.getElementById('description-infor-detail-book-ticket-popup').innerText = result.trim();
              const totalPrice = calculateTotal();
              document.getElementById('price-detail-book-ticket').innerText = `${formatNumber(totalPrice)}vnđ`;
              popup.style.display = 'block';
          }
          // UI Update functions
          function initializeSeatGridHeader() {
            const headerContainer = document.getElementById('seat-grid-header');
            headerContainer.innerHTML = '';
            for (let i = 1; i <= cols; i++) {
              const colElement = document.createElement('div');
              colElement.className = 'seat-col-number';
              colElement.textContent = i;
              headerContainer.appendChild(colElement);
            }
          }
          function updateSeatGrid() {
            const seatGrid = document.getElementById('seat-grid');
            seatGrid.innerHTML = '';
            for (let i = 0; i < rows.length; i++) {
              const rowChar = rows[i];
              const rowElement = document.createElement('div');
              rowElement.className = 'seat-row';
              const rowLetterElement = document.createElement('div');
              rowLetterElement.className = 'seat-row-letter';
              rowLetterElement.textContent = rowChar;
              rowElement.appendChild(rowLetterElement);
              for (let j = 1; j <= cols; j++) {
                const seatElement = document.createElement('div');
                seatElement.className = getSeatClass(rowChar, j);
                const seatId = `${rowChar}${j}`;
                seatElement.addEventListener('click', () => handleSeatClick(seatId));
                rowElement.appendChild(seatElement);
              }
              seatGrid.appendChild(rowElement);
            }
          }
          function updateSelectedSeatsDisplay() {
            const container = document.getElementById('selected-seats-container');
            container.innerHTML = '';
            if (selectedSeats.length > 0) {
              const seatId = selectedSeats[0];
              const row = seatId.charAt(0);
              const seatTypeText = getSeatType(row) === 'vip' ? 'VIP' :
                                  getSeatType(row) === 'couple' ? 'Couple' : 'Thường';
              const seatTypeElement = document.createElement('div');
              seatTypeElement.className = 'seat-type';
              seatTypeElement.textContent = `Ghế ${seatTypeText} x1`;
              container.appendChild(seatTypeElement);
              const seatIdElement = document.createElement('div');
              seatIdElement.className = 'seat-id';
              seatIdElement.textContent = `Ghế - ${selectedSeats.join(', ')}`;
              container.appendChild(seatIdElement);
              const seatPriceElement = document.createElement('div');
              seatPriceElement.className = 'seat-price';
              seatPriceElement.textContent = `${formatNumber(getSeatPrice(row))}vnđ`;
              container.appendChild(seatPriceElement);
            }
          }
          function updateTotalPrice() {
            const totalPrice = calculateTotal();
            document.getElementById('total-price').textContent = `${formatNumber(totalPrice)}vnđ`;
          }
          function updateShowtime(time) {
            selectedTime = time;
            document.getElementById('current-time').textContent = time;
            // Update active button
            const buttons = document.querySelectorAll('.time-btn');
            buttons.forEach(button => {
              if (button.dataset.time === time) {
                button.classList.add('active');
              } else {
                button.classList.remove('active');
              }
            });
          }
          // Update progress bar based on current step
          function updateProgressBar() {
            const progressLine = document.querySelector('.progress-line');
            const percentage = ((currentStep - 1) / 3) * 100 + 4;
            progressLine.style.width = `${percentage}%`;
            // Update step states
            const steps = document.querySelectorAll('.step');
            steps.forEach((step, index) => {
              if (index + 1 < currentStep) {
                step.classList.add('completed');
                step.classList.remove('active');
              } else if (index + 1 === currentStep) {
                step.classList.add('active');
                step.classList.remove('completed');
              } else {
                step.classList.remove('active', 'completed');
              }
            });
          }
          // Event listeners
          document.querySelectorAll('.time-btn').forEach(button => {
            button.addEventListener('click', function() {
              updateShowtime(this.dataset.time);
            });
          });
          // Add payment button event listener
          document.querySelector('.payment-btn').addEventListener('click', async function() {
            this.disabled = true;
            this.textContent = 'Đang xử lý...';
            try {
              const success = await processPayment();
              if (success) {
				  showPaymentConfirm(); 
                // showPaymentSuccess();
                currentStep = 3; // Move to confirmation step
                updateProgressBar();
              }
            } catch (error) {
              alert('Có lỗi xảy ra. Vui lòng thử lại.');
            } finally {
              this.disabled = false;
              this.textContent = 'Thanh toán';
            }
          });

          document.querySelector('.payment-btn-confirm').addEventListener('click', async function() {
            this.disabled = true;
            this.textContent = 'Đang xử lý...';
            try {
              const success = await processPayment();
              if (success) {
                showPaymentSuccess();
                currentStep = 4; // Move to confirmation step
                updateProgressBar();
              }
            } catch (error) {
              alert('Có lỗi xảy ra. Vui lòng thử lại.');
            } finally {
              this.disabled = false;
              this.textContent = 'Thanh toán';
            }
          });
          // Modal button event listeners
          document.getElementById('view-tickets-btn').addEventListener('click', function() {
            alert('Chức năng xem vé đang được phát triển');
          });
          document.getElementById('home-btn').addEventListener('click', function() {
            // Redirect to home page or reset the booking process
            window.location.reload();
          });
          // Initialize the UI
          initializeSeatGridHeader();
          updateSeatGrid();
          updateSelectedSeatsDisplay();
          updateTotalPrice();
          updateProgressBar();
        });
    </script>
</body>
</html>

